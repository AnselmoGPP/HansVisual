-Put selections in a ImGui window
-Allow add_layer to be called after opening a window (open_window) / add_layer whenever you want (lock_guard)
- Basic macros for configuring visualizer
-Axis and grid (create generator functions), center of the sphere (option of the visualizer)
-Crear un find_package() para no tener que linkar todas las librerías en el CMake
- cam.adjustments(window);
- Argumentos como float(*buff)[3], en lugar de float * (asi se asegura que los argumentos se meten en el formato correcto y los índices dentro de la función se simplifican)
-Use get_vertex_ptr o get_color_ptr instead of checking all the types in visualizerClass before taking a buffer.
- Take into account layers of type none when modifying any layer state
-Can checkboxes be checked just after entering load_buffers()? this way, all the loading process could be avoided
-Create a class for each layer, and unify load_ functions - Data structures for layers - Don't forget to uncomment the buffers_close variable in check_selections
-Keep points selected after a new scan is drawn in that layer (send_pts())
-CMake version (update) (add_package) add_compile_options, add Unix/Win32 flags
-Mutex for 2 flows: add_layer and main loop
-Save selected points from buffer > Load pts from buffer to GPU > repeat
-mut_fill_data (mutex)
-mut (vec<mutex*>)
-send_point/lines/triangles/cubes -> Put objects_to_print in mutex
-lock_points(mut[points][layer]), check_selection > lock_points(mut[pts][i]) (for), load_points > lock_points(mut[pts][i])
-send_palette
-fill_data_window 
- In check_ray(), don't check already selected points
-Una vez fuera del main loop (tras clicar esc), no debe poder llamarse a una free function
-Only one free function call per loop (main loop)
-Reorder surfaces (box planes and planes) so transparencies look right
-Optimizar selección. En lugar de chequear todos los puntos por cada píxel, averigüar la posición de cada punto en la pantalla.
-Improve selection (see sciencesoftcode notes)
-Make sure you destroy all the news
-Improve cubes rotation
-Are multiple windows possible? (1763) - Try many visualizer windows
- OOP: Encapsulation, abstraction, inheritance, polymorphism
-http://csharphelper.com/blog/2015/12/build-a-geodesic-sphere-with-wpf-and-c/


----- Future ---------------------------------------------------------

- Why the moving points get a different shape (deformation)?
- Caves
- Name generator

----- Done ---------------------------------------------------------

- add_points, add_lines, add_triangles & add_cubes only callable once per layer per loop
